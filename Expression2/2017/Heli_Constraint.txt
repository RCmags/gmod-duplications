@name Heli Constraint
@inputs [Base Hub]:entity [Blade_Array]:array
@outputs
@persist Debug RopeSlider Ballsocket 
@persist Hub_Ropes Blade_Ropes
@persist Long_Length Limter_Length Limiter_Add
 

@trigger 
@model models/sprops/rectangles/size_2/rect_12x12x3.mdl

if(first()|dupefinished()){

######IMPOTANT!!!!!!                                                         #
#####Base Angle = ang(0,90,0)                                               #
#####Hub Angle = ang(0,90,-90 )                                            ##############################
#####Blades must be facing the right way up, and facing the same direction. #
#####IMPOTANT!!!!!!                                                          #                                


    # 1/0 Settings##########################################################################################

    Debug               = 1

    Hub_Ropes           = 1
    
    Blade_Ropes         = 1
    

    #Value Settings########################################################################################## 
    
    Long_Length = 3500
    
    Limiter_Add    = 3
    
    Limiter_Length = 10

  
    ########################################################################################################
    ########################################################################################################

}#End of if(first()|dupefinished())



if(changed(Hub)&Hub){ 

  
if(Hub_Ropes){  
    Base:ropeTo(Hub,Base:toLocal(Hub:toWorld(vec(0,Long_Length,0))),vec() ,0,0,Debug,"",1)
    Base:ropeTo(Hub,Base:toLocal(Hub:toWorld(vec(Long_Length,Long_Length,0))),vec(0,Long_Length,0) ,0,0,Debug,"",1)
    Base:ropeTo(Hub,Base:toLocal(Hub:toWorld(vec(0,Long_Length,Long_Length))),vec(0,Long_Length,0) ,0,0,Debug,"",1)

    Base:ropeTo(Hub,Base:toLocal(Hub:toWorld(vec(0,0,0))),vec(0,0,Long_Length) ,0,0,Debug,"",1)
    Base:ropeTo(Hub,Base:toLocal(Hub:toWorld(vec(0,0,0))),vec(Long_Length,0,0) ,0,0,Debug,"",1)
}

if(Blade_Ropes){
    for(I = 1,Blade_Array:count())
    {
    Hub:ropeTo(Blade_Array[I,entity], vec(), vec() ,0,0,Debug,"",1)
 #
    Hub:ropeTo(Blade_Array[I,entity], vec(), Blade_Array[I,entity]:toLocal( Hub:pos() - Blade_Array[I,entity]:up()*Long_Length  ) , 0, 0, Debug,"",1)

    Hub:ropeTo(Blade_Array[I,entity], vec(), Blade_Array[I,entity]:toLocal( Hub:pos() - Blade_Array[I,entity]:right()*Long_Length  ) , 0, 0, Debug,"",1)
  
    Hub:ropeTo(Blade_Array[I,entity], Hub:toLocal(Blade_Array[I,entity]:toWorld( vec(0,Long_Length,0))), vec(), 0, 0, Debug,"",1)
    Blade_Array[I,entity]:ropeTo(Hub,vec(), Hub:toLocal(Blade_Array[I,entity]:toWorld( vec(-Limiter_Length,0,0))), Limiter_Add , 0, Debug,"",0)    
    }

#
}



    

}

