@name Simple E2 Lift - v3
@inputs E:entity
@outputs Lnorm:vector Dnorm:vector
@outputs Alpha Cl Cd
@outputs Lift:vector Drag:vector
@outputs Area Size:vector
@outputs Gain Accel:vector
@trigger 

# === Description ===
# Simple script to simulate aerodynamic forces on a prop.
runOnTick(1)

# Prop velocity 
Vel = E:vel()

# Base normal vectors
Vnorm = Vel:normalized()
Wnorm = E:up()

# Force normal vectors
Lnorm = ( Wnorm:cross(Vel):cross(Vel) ):normalized()
Dnorm = -Vnorm

# Angle of attack
Vz = Wnorm:dot(Vel)     # velocity component about z-axis
Vxy = Vel - Vz*Wnorm    # velocity about xy plane
Alpha = atanr( Vz, Vxy:length() )

# Surface area
Size = E:boxSize()
Area = Size:dot( shiftL(Size) )

# Lift and drag coefficients
Cl = pi() * sinr(2*Alpha)  
Cd = pi() * sinr(Alpha)^2

# Dynamic pressure
MASS = E:mass() # Prop mass 
SCALE = 1e0 # 5e-6   # Scaling factor to match default drag 
Dyn_press = 0.5 * airDensity() * Vel:length2() * Area * SCALE / MASS

# Aerodynamic forces
Lift = Dyn_press * Cl * Lnorm
Drag = Dyn_press * Cd * Dnorm
    # Net force
Accel = Lift + Drag

# Limit for linear acceleration spazz, around K > 800
ACC_LIMIT = 6000

if( Dyn_press < ACC_LIMIT ) {
    Gain = 1
} else {
    Gain = ACC_LIMIT / Dyn_press
}

# Scale acceleration by gain
Accel *= Gain
E:applyForce( MASS * Accel * tickInterval() )


